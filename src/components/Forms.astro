---
const {
  title = "Schedule Your Free Trial",
  subtitle = "Spots are limited and filling quickly.",
  widgetId = 'freetrial_a0fa9a84-9224-46d1-ac3b-b48afe77281f'
} = Astro.props;
---
<section id="form-section" class="bg-white py-12">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8 text-center">
    <!-- Título principal -->
    <h2 class="capitalize text-old-brick-900 font-extrabold text-3xl sm:text-4xl lg:text-5xl mb-2">
      {title}
    </h2>
    <!-- Subtítulo -->
    <p class="text-stone-800 text-lg sm:text-xl mb-6">
      {subtitle}
    </p>

    <!-- Contenedor del widget de formulario -->
    <div class="mx-auto max-w-3xl rounded-2xl shadow-xl overflow-hidden">
      <div id={widgetId} class="w-full"></div>
    </div>
  </div>

  <!-- Script de carga del widget, solo en cliente -->
  <script type="module">
    (function(win, doc, zenJSHost, src, module, partitionApiKey, widgetInstanceId) {
      win.zenplanner = win.zenplanner || {};
      win.zenplanner.directLoadArgs = win.zenplanner.directLoadArgs || [];
      let tryCount = 0, intervalId = null;
      function afterLoad() {
        const loader = win.zenplanner.directLoader;
        if (loader) {
          clearInterval(intervalId);
          win.zenplanner.directLoadArgs
            .filter(a => a.widgetInstanceId === widgetInstanceId)
            .forEach(() => loader.loadWidget(zenJSHost, module, partitionApiKey, widgetInstanceId));
        } else if (tryCount++ > 200) {
          console.error('Zen Planner widget failed to load:', module);
          clearInterval(intervalId);
        }
      }
      if (!win.zenplanner.directLoader) {
        win.zenplanner.directLoadArgs.push({ module, partitionApiKey, widgetInstanceId });
        const s = doc.createElement('script');
        s.async = true;
        s.src = `${zenJSHost}/${src}`;
        doc.head.appendChild(s);
        intervalId = setInterval(afterLoad, 50);
      } else {
        win.zenplanner.directLoader.loadWidget(zenJSHost, module, partitionApiKey, widgetInstanceId);
      }
    })(
      window,
      document,
      'https://studio.zenplanner.com',
      'zenplanner/studio/target/zp-widget-direct.js',
      'freetrial',
      '5dcb14da-2715-4c22-8f14-6648fc784219',
      widgetId
    );
  </script>

  <!-- Estilos específicos para el iframe -->
  <style>
    #form-section iframe {
      width: 100% !important;
      max-width: 100% !important;
      min-height: 800px !important;
      border: none;
    }
  </style>
</section>

<div id="freetrial_a0fa9a84-9224-46d1-ac3b-b48afe77281f"></div>
<script type="text/javascript">

(function(win, doc, zenJSHost, src, module, partitionApiKey, widgetInstanceId) {
win.zenplanner = win.zenplanner || {};
win.zenplanner.directLoadArgs = win.zenplanner.directLoadArgs || [];
var tryCount = 0,
intervalId = null;
function afterLoad() {
if (win.zenplanner.directLoader !== undefined && window.zenplanner.directLoader !== null) {
clearInterval(intervalId);
for (var i = 0, l = win.zenplanner.directLoadArgs.length; l > i; i++) {
if (win.zenplanner.directLoadArgs[i].widgetInstanceId === widgetInstanceId) {
win.zenplanner.directLoader.loadWidget(zenJSHost, module, partitionApiKey, widgetInstanceId);
}
}
} else if (tryCount++ > 200) {
console.log('Zen Planner widget : ' + module + ', failed to load.');
clearInterval(intervalId);
}
}
if (win.zenplanner.directLoader === undefined || win.zenplanner.directLoader === null) {
win.zenplanner.directLoadArgs.push({
module: module,
partitionApiKey: partitionApiKey,
widgetInstanceId: widgetInstanceId
});
var s = doc.createElement('script');
s.async = 1;
s.src = zenJSHost + '/' + src;
doc.head.appendChild(s);
intervalId = setInterval(afterLoad, 50);
} else {
win.zenplanner.directLoader.loadWidget(zenJSHost, module, partitionApiKey, widgetInstanceId);
}
})(
window,
document,
'https://studio.zenplanner.com',
'zenplanner/studio/target/zp-widget-direct.js',
'freetrial',
'5dcb14da-2715-4c22-8f14-6648fc784219',
'a0fa9a84-9224-46d1-ac3b-b48afe77281f'
);
</script>