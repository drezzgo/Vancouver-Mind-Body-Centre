<!-- Backdrop -->
<div
  id="contact-modal-backdrop"
  class="fixed inset-0 bg-black/40 backdrop-blur-sm hidden z-50"
  aria-hidden="true"
></div>

<!-- Modal -->
<div
  id="contact-modal"
  role="dialog"
  aria-modal="true"
  class="fixed inset-0 flex items-center justify-center p-4 hidden z-50"
>
  <div
    id="modal-content"
    class="
      bg-white
      rounded-2xl
      shadow-2xl
      w-full max-w-lg
      overflow-hidden
      transform scale-95 opacity-0
      transition-all duration-300
      focus:outline-none
    "
  >
    <!-- Header -->
    <div class="flex items-center justify-between px-6 py-4 bg-old-brick-800">
      <h2 class="text-2xl font-bold text-white">Get in Touch</h2>
      <button
        id="modal-close"
        aria-label="Close modal"
        class="text-white hover:text-old-brick-200 transition-colors text-2xl leading-none"
      >
        &times;
      </button>
    </div>

    <!-- Formulario apuntando a FormSubmit -->
    <form
      id="contact-form"
      class="px-6 py-6 space-y-5"
    >
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label for="name" class="block text-sm font-medium text-gray-700">
            Full Name
          </label>
          <input
            type="text" id="name" name="fullName" required
            class="mt-1 block w-full rounded-lg border border-gray-300 px-3 py-2
                   focus:ring-old-brick-500 focus:border-old-brick-500 transition"
          />
        </div>
        <div>
          <label for="residence" class="block text-sm font-medium text-gray-700">
            Place of Residence
          </label>
          <input
            type="text" id="residence" name="residence" required
            class="mt-1 block w-full rounded-lg border border-gray-300 px-3 py-2
                   focus:ring-old-brick-500 focus:border-old-brick-500 transition"
          />
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700">
            Email Address
          </label>
          <input
            type="email" id="email" name="email" required
            class="mt-1 block w-full rounded-lg border border-gray-300 px-3 py-2
                   focus:ring-old-brick-500 focus:border-old-brick-500 transition"
          />
        </div>
        <div>
          <label for="phone" class="block text-sm font-medium text-gray-700">
            Phone Number
          </label>
          <input
            type="tel" id="phone" name="phone" required
            class="mt-1 block w-full rounded-lg border border-gray-300 px-3 py-2
                   focus:ring-old-brick-500 focus:border-old-brick-500 transition"
          />
        </div>
      </div>

      <div class="flex items-center">
        <input
          type="checkbox" id="terms" name="terms" required
          class="h-4 w-4 text-old-brick-800 border-gray-300 rounded focus:ring-old-brick-500"
        />
        <label for="terms" class="ml-2 block text-sm text-gray-700">
          I accept the
          <a href="/terms" class="text-old-brick-800 hover:underline">terms &amp; conditions</a>
        </label>
      </div>

      <button
        type="submit"
        class="w-full bg-old-brick-800 hover:bg-old-brick-700 text-white font-semibold
               py-3 rounded-full shadow-md transition-all duration-200"
      >
        Send Message
      </button>
    </form>

    <!-- Mensaje de agradecimiento -->
    <div
      id="thankyou-msg"
      class="px-6 py-6 text-center text-lg font-semibold hidden"
    >
      ðŸŽ‰ Thank you! Weâ€™ll be in touch soon.
    </div>
  </div>
</div>
<script type="module">
  const form = document.getElementById('contact-form');
  const thankYouMsg = document.getElementById('thankyou-msg');
form.addEventListener('submit', async e => {
    e.preventDefault();
    // valida tÃ©rminos si tienes checkbox
    const terms = document.getElementById('terms');
    if (terms && !terms.checked) {
      alert('You must accept the terms & conditions.');
      return;
    }

    // Usa FormData para no disparar preflight CORS
    const formData = new FormData(form);

    try {
      const res = await fetch(
        'https://hooks.zapier.com/hooks/catch/21054742/uuic8fu/',
        { method: 'POST', body: formData }
      );
      if (!res.ok) throw new Error(res.statusText);

    // Redirect after success
    window.location.href = '/thank-you';

    } catch (err) {
      console.error('Zapier error:', err);
      alert('There was an error sending your message. Please try again.');
    }
  });
</script>
